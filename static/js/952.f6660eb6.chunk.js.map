{"version":3,"file":"static/js/952.f6660eb6.chunk.js","mappings":"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","sources":["components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  MdPlayArrow,\n  MdPause,\n  MdSkipNext,\n  MdSkipPrevious,\n} from \"react-icons/md\";\nimport \"../styles/MusicPlayer.css\";\n\nimport BoleritoStapelia from \"../assets/music/Bolerito de Stapelia.mp3\";\nimport Frio from \"../assets/music/Frio.mp3\";\nimport Girasoles from \"../assets/music/Girasoles.mp3\";\nimport Limonero from \"../assets/music/Limonero.mp3\";\nimport MariposaOrigami from \"../assets/music/Mariposa Origami.mp3\";\nimport Oceanica from \"../assets/music/Oceanica.mp3\";\n\nconst MusicPlayer = () => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [currentSong, setCurrentSong] = useState({});\n  const [progress, setProgress] = useState(0);\n  const [isSeeking, setIsSeeking] = useState(false);\n\n  const songs = useMemo(\n    () => [\n      { title: \"Bolerito de Stapelia\", source: BoleritoStapelia },\n      { title: \"Frio\", source: Frio },\n      { title: \"Girasoles\", source: Girasoles },\n      { title: \"Limonero\", source: Limonero },\n      { title: \"Mariposa Origami\", source: MariposaOrigami },\n      { title: \"Oceanica\", source: Oceanica },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    audioRef.current.src = songs[currentSongIndex].source;\n    setCurrentSong(songs[currentSongIndex]);\n  }, [currentSongIndex, songs]);\n\n  const handlePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleNextSong = () => {\n    const nextIndex = (currentSongIndex + 1) % songs.length;\n    setCurrentSongIndex(nextIndex);\n  };\n\n  const handlePreviousSong = () => {\n    const previousIndex = (currentSongIndex - 1 + songs.length) % songs.length;\n    setCurrentSongIndex(previousIndex);\n  };\n\n  const handleTimeUpdate = () => {\n    const currentTime = audioRef.current.currentTime;\n    const duration = audioRef.current.duration;\n    const progressPercentage = (currentTime / duration) * 100;\n    if (!isSeeking) {\n      setProgress(progressPercentage);\n    }\n  };\n\n  const handleSeek = (e) => {\n    const seekTime = (e.target.value / 100) * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n    setProgress(e.target.value);\n  };\n\n  const handleSeekStart = () => {\n    setIsSeeking(true);\n  };\n\n  const handleSeekEnd = () => {\n    setIsSeeking(false);\n  };\n\n  const handleSongEnd = () => {\n    handleNextSong();\n  };\n\n  return (\n    <div className=\"music-player-container\">\n      <div className=\"music-player\">\n        <div className=\"song-info\">\n          <div className=\"song-title\">{currentSong.title}</div>\n          <input\n            type=\"range\"\n            className=\"progress-bar\"\n            value={progress}\n            max=\"100\"\n            onChange={handleSeek}\n            onMouseDown={handleSeekStart}\n            onMouseUp={handleSeekEnd}\n          />\n        </div>\n        <div className=\"controls\">\n          <button onClick={handlePreviousSong}>\n            <MdSkipPrevious />\n          </button>\n          <button onClick={handlePlayPause}>\n            {isPlaying ? <MdPause /> : <MdPlayArrow />}\n          </button>\n          <button onClick={handleNextSong}>\n            <MdSkipNext />\n          </button>\n        </div>\n      </div>\n\n      <audio\n        ref={audioRef}\n        autoPlay={isPlaying}\n        onTimeUpdate={handleTimeUpdate}\n        onEnded={handleSongEnd}\n      />\n    </div>\n  );\n};\n\nexport default MusicPlayer;\n"],"names":["audioRef","useRef","_useState","useState","_useState2","_slicedToArray","isPlaying","setIsPlaying","_useState3","_useState4","currentSongIndex","setCurrentSongIndex","_useState5","_useState6","currentSong","setCurrentSong","_useState7","_useState8","progress","setProgress","_useState9","_useState10","isSeeking","setIsSeeking","songs","useMemo","title","source","BoleritoStapelia","Frio","Girasoles","Limonero","MariposaOrigami","Oceanica","useEffect","current","src","handleNextSong","nextIndex","length","_jsxs","className","children","_jsx","type","value","max","onChange","e","seekTime","target","duration","currentTime","onMouseDown","onMouseUp","onClick","previousIndex","MdSkipPrevious","pause","play","MdPause","MdPlayArrow","MdSkipNext","ref","autoPlay","onTimeUpdate","onEnded"],"sourceRoot":""}